k = 960939379918958884971672962127852754715004339660129306651505519271702802395266424689642842174350718121267153782770623355993237280874144307891325963941337723487857735749823926629715517173716995165232890538221612403238855866184013235585136048828693337902491454229288667081096184496091705183454067827731551705405381627380967602565625016981482083418783163849115590225610003652351370343874461848378737238198224849863465033159410054974700593138339226497249461751545728366702369745461014655997933798537483143786841806593422227898388722980000748404719
#k = 4858450636189713423582095962494202044581400587983244549483093085061934704708809928450644769865524364849997247024915119110411605739177407856919754326571855442057210445735883681829823754139634338225199452191651284348332905131193199953502413758765239264874613394906870130562295813219481113685339535565290850023875092856892694555974281546386510730049106723058933586052544096664351265349363643957125565695936815184334857605266940161251266951421550539554519153785457525756590740540157929001765967965480064427829131488548259914721248506352686630476300

def tupper(x, y):
    """
    Return True if point (x, y) (x and y both start at 0) is to be drawn black, False otherwise
    """
    return ((k + y)//17//2**(17*int(x) + int(y)%17))%2 > 0.5

s = 10
def setup():
    size(110*s, 17*s)
    pixelDensity(2)
    
def draw():
    loadPixels()
    background(255)
    for x in range(110):
        for y in range (17):
            if tupper(x, y) != 0:
                scale(1)
                fill(0)
                circle(x*s,y*s, 10)
    
    
'''           
    for y in range(height):
      for x in range(width):
        #pixels[(height-y-1)*width+x] = pixels[y*width+x] 
        pixels[j*width+i] = pixels[(width - i - 1) + j*width]
    updatePixels()
'''
